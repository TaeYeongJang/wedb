//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CshapJni {
    
    
    #region Component Designer generated code 
    public partial class ReservoirWaterRateForecastOutput_cs_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::CshapJni.@__ReservoirWaterRateForecastOutput_cs.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::CshapJni.ReservoirWaterRateForecastOutput_cs), typeof(global::CshapJni.ReservoirWaterRateForecastOutput_cs_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::CshapJni.ReservoirWaterRateForecastOutput_cs), typeof(global::CshapJni.ReservoirWaterRateForecastOutput_cs_))]
    internal sealed partial class @__ReservoirWaterRateForecastOutput_cs : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__ReservoirWaterRateForecastOutput_cs(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::CshapJni.@__ReservoirWaterRateForecastOutput_cs.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__ReservoirWaterRateForecastOutput_cs);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getFacCode", "getFacCode0", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setFacCode", "setFacCode1", "(Ljava/lang/String;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getVow1", "getVow12", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setVow1", "setVow13", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getVow2", "getVow24", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setVow2", "setVow25", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getVow3", "getVow36", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setVow3", "setVow37", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getFacAvg", "getFacAvg8", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setFacAvg", "setFacAvg9", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getRVow", "getRVow10", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setRVow", "setRVow11", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getRVow1", "getRVow112", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setRVow1", "setRVow113", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getRVow2", "getRVow214", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setRVow2", "setRVow215", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getRVow3", "getRVow316", "()D"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setRVow3", "setRVow317", "(D)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorReservoirWaterRateForecastOutput_cs0", "__ctorReservoirWaterRateForecastOutput_cs0", "(Lnet/sf/jni4net/inj/IClrProxy;)V"));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getFacCode0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/lang/String;
            // ()LSystem/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2JString(@__env, @__real.getFacCode());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setFacCode1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle facCode) {
            // (Ljava/lang/String;)V
            // (LSystem/String;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setFacCode(global::net.sf.jni4net.utils.Convertor.StrongJ2CString(@__env, facCode));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getVow12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getVow1()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setVow13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double vow1) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setVow1(vow1);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getVow24(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getVow2()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setVow25(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double vow2) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setVow2(vow2);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getVow36(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getVow3()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setVow37(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double vow3) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setVow3(vow3);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getFacAvg8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getFacAvg()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setFacAvg9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double facAvg) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setFacAvg(facAvg);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getRVow10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getRVow()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setRVow11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double rVow) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setRVow(rVow);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getRVow112(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getRVow1()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setRVow113(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double rVow1) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setRVow1(rVow1);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getRVow214(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getRVow2()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setRVow215(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double rVow2) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setRVow2(rVow2);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static double getRVow316(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()D
            // ()D
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            double @__return = default(double);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__return = ((double)(@__real.getRVow3()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setRVow317(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, double rVow3) {
            // (D)V
            // (D)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::CshapJni.ReservoirWaterRateForecastOutput_cs>(@__env, @__obj);
            @__real.setRVow3(rVow3);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorReservoirWaterRateForecastOutput_cs0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::CshapJni.ReservoirWaterRateForecastOutput_cs @__real = new global::CshapJni.ReservoirWaterRateForecastOutput_cs();
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::CshapJni.@__ReservoirWaterRateForecastOutput_cs(@__env);
            }
        }
    }
    #endregion
}
